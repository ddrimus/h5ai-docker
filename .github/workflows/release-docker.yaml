name: Release Docker

on:
  push:
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ddrimus/h5ai-docker

jobs:
  release-docker:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      
    steps:
      # Download repository code to runner
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      # Set up multi-architecture build support
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      # Login to GitHub Container Registry
      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      # Generate image tags for the release
      - name: Generate image tags
        id: tags
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          MAJOR=$(echo $VERSION | cut -d. -f1)
          MINOR=$(echo $VERSION | cut -d. -f1-2)
          echo "tags<<EOF" >> $GITHUB_OUTPUT
          echo "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$VERSION" >> $GITHUB_OUTPUT
          echo "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$MINOR" >> $GITHUB_OUTPUT
          echo "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$MAJOR" >> $GITHUB_OUTPUT
          echo "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
      # Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6
          push: true
          tags: ${{ steps.tags.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      # Generate release notes from git history
      - name: Generate release notes
        run: |
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          echo "**What's Changed:**" > notes.md
          if [ -z "$PREV_TAG" ]; then
            git log --pretty=format:"* %s by @%an" --reverse --no-merges HEAD >> notes.md
          else
            git log --pretty=format:"* %s by @%an" --reverse --no-merges $PREV_TAG..HEAD >> notes.md
          fi
          awk '!seen[$0]++' notes.md > notes_clean.md
          mv notes_clean.md notes.md
          if [ $(wc -l < notes.md) -eq 1 ]; then
            echo "* Initial release by @$(git log --pretty=format:'%an' -1)" >> notes.md
          fi
          
      # Create GitHub release
      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          body_path: notes.md
          draft: false
          prerelease: false